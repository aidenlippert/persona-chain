// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: persona_chain/did/v1/tx.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateDid represents a message to create a new DID document
type MsgCreateDid struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DidDocument string `protobuf:"bytes,3,opt,name=did_document,json=didDocument,proto3" json:"did_document,omitempty"`
}

func (m *MsgCreateDid) Reset()         { *m = MsgCreateDid{} }
func (m *MsgCreateDid) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDid) ProtoMessage()    {}

// MsgCreateDidResponse defines the Msg/CreateDid response type.
type MsgCreateDidResponse struct {
}

func (m *MsgCreateDidResponse) Reset()         { *m = MsgCreateDidResponse{} }
func (m *MsgCreateDidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDidResponse) ProtoMessage()    {}

// MsgUpdateDid represents a message to update an existing DID document
type MsgUpdateDid struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	DidDocument string `protobuf:"bytes,3,opt,name=did_document,json=didDocument,proto3" json:"did_document,omitempty"`
}

func (m *MsgUpdateDid) Reset()         { *m = MsgUpdateDid{} }
func (m *MsgUpdateDid) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDid) ProtoMessage()    {}

// MsgUpdateDidResponse defines the Msg/UpdateDid response type.
type MsgUpdateDidResponse struct {
}

func (m *MsgUpdateDidResponse) Reset()         { *m = MsgUpdateDidResponse{} }
func (m *MsgUpdateDidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDidResponse) ProtoMessage()    {}

// MsgDeactivateDid represents a message to deactivate a DID document
type MsgDeactivateDid struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeactivateDid) Reset()         { *m = MsgDeactivateDid{} }
func (m *MsgDeactivateDid) String() string { return proto.CompactTextString(m) }
func (*MsgDeactivateDid) ProtoMessage()    {}

// MsgDeactivateDidResponse defines the Msg/DeactivateDid response type.
type MsgDeactivateDidResponse struct {
}

func (m *MsgDeactivateDidResponse) Reset()         { *m = MsgDeactivateDidResponse{} }
func (m *MsgDeactivateDidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeactivateDidResponse) ProtoMessage()    {}

// Marshal implementations
func (m *MsgCreateDid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DidDocument) > 0 {
		i -= len(m.DidDocument)
		copy(dAtA[i:], m.DidDocument)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DidDocument)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DidDocument)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}

// Unmarshal implementations (minimal)
func (m *MsgCreateDid) Unmarshal(dAtA []byte) error {
	// Minimal implementation for compilation
	return nil
}