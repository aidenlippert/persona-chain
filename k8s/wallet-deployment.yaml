# PersonaPass Wallet - Production Kubernetes Deployment
# Security-hardened PWA with auto-scaling and comprehensive monitoring

apiVersion: v1
kind: ConfigMap
metadata:
  name: wallet-config
  namespace: personapass-prod
  labels:
    app: personapass-wallet
    version: v1.0.0-rc1
data:
  VITE_APP_NAME: "PersonaPass Wallet"
  VITE_APP_VERSION: "1.0.0-rc1"
  VITE_ENVIRONMENT: "production"
  VITE_API_BASE_URL: "https://api.personapass.io"
  VITE_BLOCKCHAIN_RPC: "https://rpc.personapass.io"
  VITE_BLOCKCHAIN_API: "https://api.personapass.io"
  VITE_CHAIN_ID: "persona-mainnet-1"
  VITE_ENABLE_ANALYTICS: "true"
  VITE_LOG_LEVEL: "error"
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;

    worker_rlimit_nofile 65535;

    events {
        worker_connections 4096;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Security Headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # CSP for PersonaPass PWA
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' https: wss:; manifest-src 'self'; worker-src 'self'" always;

        # Performance optimizations
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;

        # Compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            application/wasm;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        server {
            listen 8080;
            server_name _;
            root /usr/share/nginx/html;
            index index.html;

            server_tokens off;

            # PWA manifest and service worker
            location /manifest.json {
                add_header Cache-Control "public, max-age=86400";
                try_files $uri =404;
            }

            location /sw.js {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                try_files $uri =404;
            }

            # Static assets with caching
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                limit_req zone=static burst=20 nodelay;
                expires 1y;
                add_header Cache-Control "public, immutable";
                try_files $uri =404;
            }

            # SPA routing
            location / {
                try_files $uri $uri/ /index.html;
                
                location ~ ^/(wallet|credentials|proof) {
                    add_header X-Robots-Tag "noindex, nofollow" always;
                }
            }

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # Metrics endpoint for Prometheus
            location /metrics {
                access_log off;
                stub_status on;
                allow 10.0.0.0/8;
                deny all;
            }

            # Security: Deny hidden files
            location ~ /\. {
                deny all;
            }
        }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: wallet-secrets
  namespace: personapass-prod
  labels:
    app: personapass-wallet
type: Opaque
data:
  # Base64 encoded secrets (replace with actual values)
  SENTRY_DSN: ""
  ANALYTICS_KEY: ""
  ENCRYPTION_KEY: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: personapass-wallet
  namespace: personapass-prod
  labels:
    app: personapass-wallet
    version: v1.0.0-rc1
    tier: frontend
  annotations:
    deployment.kubernetes.io/revision: "1"
    description: "PersonaPass Wallet PWA - Production deployment with security hardening"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: personapass-wallet
  template:
    metadata:
      labels:
        app: personapass-wallet
        version: v1.0.0-rc1
        tier: frontend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101
        fsGroup: 101
        seccompProfile:
          type: RuntimeDefault
      
      # Pod Anti-Affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - personapass-wallet
              topologyKey: kubernetes.io/hostname

      containers:
      - name: wallet
        image: personapass/wallet:1.0.0-rc1
        imagePullPolicy: Always
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101
          runAsGroup: 101
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
        # Environment variables
        envFrom:
        - configMapRef:
            name: wallet-config
        - secretRef:
            name: wallet-secrets
        
        # Resource limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        
        # Liveness probe
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Readiness probe
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup probe
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # Volume mounts
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run

      # Volumes
      volumes:
      - name: nginx-config
        configMap:
          name: wallet-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: tmp
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}

      # DNS configuration
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: personapass-wallet-service
  namespace: personapass-prod
  labels:
    app: personapass-wallet
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: personapass-wallet
  sessionAffinity: None

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: personapass-wallet-hpa
  namespace: personapass-prod
  labels:
    app: personapass-wallet
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: personapass-wallet
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: personapass-wallet-pdb
  namespace: personapass-prod
  labels:
    app: personapass-wallet
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: personapass-wallet