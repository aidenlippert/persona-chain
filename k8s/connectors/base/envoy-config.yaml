apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: connectors
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8443
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.stdout
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              http_filters:
              - name: envoy.filters.http.jwt_authn
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                  providers:
                    personapass:
                      issuer: "https://auth.personapass.io"
                      audiences:
                      - "connectors.personapass.io"
                      remote_jwks:
                        http_uri:
                          uri: "https://auth.personapass.io/.well-known/jwks.json"
                          cluster: jwks_cluster
                          timeout: 5s
                        cache_duration:
                          seconds: 300
                  rules:
                  - match:
                      prefix: "/api/v1"
                    requires:
                      provider_name: "personapass"
              - name: envoy.filters.http.ratelimit
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                  domain: connectors
                  rate_limit_service:
                    transport_api_version: V3
                    grpc_service:
                      envoy_grpc:
                        cluster_name: rate_limit_cluster
                  timeout: 0.25s
              - name: envoy.filters.http.cors
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route
                virtual_hosts:
                - name: connectors
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/api/v1/github/"
                    route:
                      cluster: github_connector
                      timeout: 30s
                  - match:
                      prefix: "/api/v1/linkedin/"
                    route:
                      cluster: linkedin_connector
                      timeout: 30s
                  - match:
                      prefix: "/api/v1/orcid/"
                    route:
                      cluster: orcid_connector
                      timeout: 30s
                  - match:
                      prefix: "/api/v1/plaid/"
                    route:
                      cluster: plaid_connector
                      timeout: 30s
                  - match:
                      prefix: "/api/v1/twitter/"
                    route:
                      cluster: twitter_connector
                      timeout: 30s
                  - match:
                      prefix: "/api/v1/stackexchange/"
                    route:
                      cluster: stackexchange_connector
                      timeout: 30s
                  - match:
                      prefix: "/health"
                    route:
                      cluster: health_check
                  cors:
                    allow_origin_string_match:
                    - prefix: "https://app.personapass.io"
                    - prefix: "http://localhost"
                    allow_methods: "GET, POST, PUT, DELETE, OPTIONS"
                    allow_headers: "authorization, content-type, x-request-id"
                    expose_headers: "x-request-id, x-ratelimit-limit, x-ratelimit-remaining"
                    max_age: "86400"
                    allow_credentials: true
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificates:
                - certificate_chain:
                    filename: "/etc/envoy/certs/cert.pem"
                  private_key:
                    filename: "/etc/envoy/certs/key.pem"
                alpn_protocols: ["h2", "http/1.1"]
      clusters:
      - name: github_connector
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: github_connector
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: connector-github.connectors.svc.cluster.local
                    port_value: 80
        health_checks:
        - timeout: 5s
          interval: 10s
          unhealthy_threshold: 2
          healthy_threshold: 2
          http_health_check:
            path: /health
        circuit_breakers:
          thresholds:
          - priority: DEFAULT
            max_connections: 1000
            max_pending_requests: 1000
            max_requests: 1000
            max_retries: 3
      - name: linkedin_connector
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: linkedin_connector
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: connector-linkedin.connectors.svc.cluster.local
                    port_value: 80
      - name: orcid_connector
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: orcid_connector
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: connector-orcid.connectors.svc.cluster.local
                    port_value: 80
      - name: plaid_connector
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: plaid_connector
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: connector-plaid.connectors.svc.cluster.local
                    port_value: 80
      - name: twitter_connector
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: twitter_connector
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: connector-twitter.connectors.svc.cluster.local
                    port_value: 80
      - name: stackexchange_connector
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: stackexchange_connector
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: connector-stackexchange.connectors.svc.cluster.local
                    port_value: 80
      - name: health_check
        type: STATIC
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: health_check
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8001
      - name: jwks_cluster
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: jwks_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: auth.personapass.io
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: auth.personapass.io
      - name: rate_limit_cluster
        type: STRICT_DNS
        lb_policy: ROUND_ROBIN
        http2_protocol_options: {}
        load_assignment:
          cluster_name: rate_limit_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: ratelimit.connectors.svc.cluster.local
                    port_value: 8081
    admin:
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy
  namespace: connectors
spec:
  replicas: 3
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy:v1.28-latest
        ports:
        - containerPort: 8443
          name: https
        - containerPort: 8001
          name: admin
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
        - name: tls-certs
          mountPath: /etc/envoy/certs
        command: ["/usr/local/bin/envoy"]
        args: ["-c", "/etc/envoy/envoy.yaml", "--service-cluster", "connectors", "--service-node", "envoy"]
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8001
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config
      - name: tls-certs
        secret:
          secretName: envoy-tls-secret
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-service
  namespace: connectors
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:..."
spec:
  type: LoadBalancer
  ports:
  - port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app: envoy