---
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: control-plane
  namespace: istio-system
  annotations:
    description: "Istio control plane configuration for PersonaPass"
spec:
  revision: "1-19-0"
  values:
    global:
      meshID: personapass-mesh
      network: personapass-network
      hub: docker.io/istio
      tag: 1.19.0
      proxy:
        image: proxyv2
        clusterDomain: "cluster.local"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        logLevel: warning
        componentLogLevel: "misc:error"
      proxy_init:
        image: proxyv2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 10Mi
      defaultNodeSelector: {}
      defaultTolerations: []
      imagePullPolicy: IfNotPresent
      imagePullSecrets: []
      oneNamespace: false
      defaultPodDisruptionBudget:
        enabled: true
      defaultResources:
        requests:
          cpu: 10m
      defaultConfigVisibilitySettings: []
      meshNetworks: {}
      mountMtlsCerts: false
      caAddress: ""
      caName: ""
      externalIstiod: false
      remotePilotAddress: ""
      istiodRemote:
        enabled: false
      pilotCertProvider: istiod
      jwtPolicy: third-party-jwt
      sds:
        token:
          aud: istio-ca
      sts:
        servicePort: 0
      meshConfig:
        defaultConfig:
          proxyStatsMatcher:
            inclusionRegexps:
            - ".*outlier_detection.*"
            - ".*circuit_breaker.*"
            - ".*upstream_rq_retry.*"
            - ".*upstream_rq_pending.*"
            - ".*_cx_.*"
            exclusionRegexps:
            - ".*osconfig.*"
        enablePrometheusMerge: true
        defaultProviders:
          metrics:
          - prometheus
          tracing:
          - jaeger
          accessLogging:
          - envoy
        extensionProviders:
        - name: jaeger
          envoyOtelAls:
            service: jaeger-collector.observability.svc.cluster.local
            port: 4317
        - name: prometheus
          prometheus:
            configOverride:
              metric_relabeling_configs:
              - source_labels: [__name__]
                regex: 'istio_.*'
                target_label: __tmp_istio_metric
              - source_labels: [__tmp_istio_metric, __name__]
                regex: '(.*);istio_(.*)'
                target_label: __name__
                replacement: '${2}'
        outboundTrafficPolicy:
          mode: REGISTRY_ONLY
        defaultServiceExportTo:
        - "*"
        defaultVirtualServiceExportTo:
        - "*"
        defaultDestinationRuleExportTo:
        - "*"
        proxyStatsMatcher:
          inclusionRegexps:
          - ".*circuit_breaker.*"
          - ".*upstream_rq_retry.*"
          - ".*upstream_rq_pending.*"
          - ".*_cx_.*"
          exclusionRegexps:
          - ".*osconfig.*"
  components:
    pilot:
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
          limits:
            cpu: 1000m
            memory: 4096Mi
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istiod
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
        env:
        - name: PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION
          value: "true"
        - name: PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY
          value: "true"
        - name: PILOT_ENABLE_AMBIENT
          value: "false"
        - name: PILOT_ENABLE_CONFIG_DISTRIBUTION_TRACKING
          value: "true"
        - name: PILOT_ENABLE_STATUS
          value: "true"
        service:
          type: ClusterIP
        overlays:
        - apiVersion: apps/v1
          kind: Deployment
          name: istiod
          patches:
          - path: spec.template.spec.containers.[name:discovery].resources
            value:
              requests:
                cpu: 500m
                memory: 2048Mi
              limits:
                cpu: 1000m
                memory: 4096Mi
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        service:
          type: LoadBalancer
          ports:
          - port: 15021
            targetPort: 15021
            name: status-port
            protocol: TCP
          - port: 80
            targetPort: 8080
            name: http2
            protocol: TCP
          - port: 443
            targetPort: 8443
            name: https
            protocol: TCP
          - port: 15090
            targetPort: 15090
            name: http-monitoring
            protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        hpaSpec:
          maxReplicas: 5
          minReplicas: 2
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-ingressgateway
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
        env:
        - name: ISTIO_META_ROUTER_MODE
          value: "sni-dnat"
        - name: ISTIO_META_REQUESTED_NETWORK_VIEW
          value: personapass-network
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    istio: ingressgateway
                topologyKey: kubernetes.io/hostname
        nodeSelector:
          kubernetes.io/arch: amd64
        tolerations:
        - key: "kubernetes.io/arch"
          operator: "Equal"
          value: "amd64"
          effect: "NoSchedule"
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        service:
          type: ClusterIP
          ports:
          - port: 80
            name: http2
            protocol: TCP
          - port: 443
            name: https
            protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        hpaSpec:
          maxReplicas: 3
          minReplicas: 1
          scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: istio-egressgateway
          metrics:
          - type: Resource
            resource:
              name: cpu
              target:
                type: Utilization
                averageUtilization: 80
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    istio: egressgateway
                topologyKey: kubernetes.io/hostname
        nodeSelector:
          kubernetes.io/arch: amd64

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio-mesh-config
  namespace: istio-system
  labels:
    app.kubernetes.io/name: istio
    app.kubernetes.io/component: mesh-config
    app.kubernetes.io/part-of: istio
data:
  mesh: |
    defaultConfig:
      discoveryRefreshDelay: 10s
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*outlier_detection.*"
        - ".*circuit_breaker.*"
        - ".*upstream_rq_retry.*"
        - ".*upstream_rq_pending.*"
        - ".*_cx_.*"
        exclusionRegexps:
        - ".*osconfig.*"
      gatewayTopology:
        numTrustedProxies: 2
      proxyMetadata:
        PILOT_ENABLE_IP_AUTOALLOCATE: true
        PILOT_ENABLE_CONFIG_DISTRIBUTION_TRACKING: true
    defaultProviders:
      metrics:
      - prometheus
      tracing:
      - jaeger
      accessLogging:
      - envoy
    enablePrometheusMerge: true
    rootNamespace: istio-system
    trustDomain: cluster.local
    outboundTrafficPolicy:
      mode: REGISTRY_ONLY
    defaultServiceExportTo:
    - "*"
    defaultVirtualServiceExportTo:
    - "*"
    defaultDestinationRuleExportTo:
    - "*"
    extensionProviders:
    - name: jaeger
      envoyOtelAls:
        service: jaeger-collector.observability.svc.cluster.local
        port: 4317
    - name: prometheus
      prometheus: {}
    - name: envoy
      envoyFileAccessLog:
        path: "/dev/stdout"
        format: |
          [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%"
          %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT%
          %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% "%REQ(X-FORWARDED-FOR)%"
          "%REQ(USER-AGENT)%" "%REQ(X-REQUEST-ID)%" "%REQ(:AUTHORITY)%" "%UPSTREAM_HOST%"
    meshNetworks:
      personapass-network:
        endpoints:
        - fromRegistry: Kubernetes
        gateways:
        - address: 0.0.0.0
          port: 443