---
apiVersion: v1
kind: Namespace
metadata:
  name: keda
  labels:
    name: keda
    app.kubernetes.io/name: keda
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: keda

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: scaledobjects.keda.sh
  labels:
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/part-of: keda-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/version: "2.12.0"
spec:
  group: keda.sh
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              scaleTargetRef:
                type: object
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  envSourceContainerName:
                    type: string
              pollingInterval:
                type: integer
                minimum: 1
                maximum: 3600
                default: 30
              cooldownPeriod:
                type: integer
                minimum: 0
                default: 300
              idleReplicaCount:
                type: integer
                minimum: 0
              minReplicaCount:
                type: integer
                minimum: 0
              maxReplicaCount:
                type: integer
                minimum: 1
              fallback:
                type: object
                properties:
                  failureThreshold:
                    type: integer
                    minimum: 1
                  replicas:
                    type: integer
                    minimum: 1
              advanced:
                type: object
                properties:
                  restoreToOriginalReplicaCount:
                    type: boolean
                    default: false
                  horizontalPodAutoscalerConfig:
                    type: object
                    properties:
                      name:
                        type: string
                      behavior:
                        type: object
              triggers:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                    name:
                      type: string
                    metadata:
                      type: object
                    authenticationRef:
                      type: object
                      properties:
                        name:
                          type: string
                        kind:
                          type: string
          status:
            type: object
  scope: Namespaced
  names:
    plural: scaledobjects
    singular: scaledobject
    kind: ScaledObject
    shortNames:
    - so

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keda-operator
  namespace: keda
  labels:
    app: keda-operator
    name: keda-operator
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: keda
    app.kubernetes.io/version: "2.12.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-operator
  template:
    metadata:
      labels:
        app: keda-operator
        app.kubernetes.io/name: keda-operator
        app.kubernetes.io/component: operator
        app.kubernetes.io/part-of: keda
        app.kubernetes.io/version: "2.12.0"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: keda-operator
      containers:
      - name: keda-operator
        image: ghcr.io/kedacore/keda:2.12.0
        imagePullPolicy: IfNotPresent
        command:
        - keda
        args:
        - "--zap-log-level=info"
        - "--zap-encoder=console"
        - "--zap-time-encoding=rfc3339"
        - "--cert-dir=/certs"
        - "--health-probe-bind-address=:8081"
        - "--metrics-bind-address=:8080"
        - "--ready-check-interval=4s"
        - "--max-scale-jobs-limit=100"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          value: "keda-operator"
        - name: KEDA_HTTP_DEFAULT_TIMEOUT
          value: "3000"
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: healthz
          containerPort: 8081
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 25
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        volumeMounts:
        - name: certificates
          mountPath: /certs
          readOnly: true
      volumes:
      - name: certificates
        secret:
          secretName: kedaorg-certs
          defaultMode: 420
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - keda-operator
              topologyKey: kubernetes.io/hostname

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keda-metrics-apiserver
  namespace: keda
  labels:
    app: keda-metrics-apiserver
    name: keda-metrics-apiserver
    app.kubernetes.io/name: keda-metrics-apiserver
    app.kubernetes.io/component: metrics-apiserver
    app.kubernetes.io/part-of: keda
    app.kubernetes.io/version: "2.12.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keda-metrics-apiserver
  template:
    metadata:
      labels:
        app: keda-metrics-apiserver
        app.kubernetes.io/name: keda-metrics-apiserver
        app.kubernetes.io/component: metrics-apiserver
        app.kubernetes.io/part-of: keda
        app.kubernetes.io/version: "2.12.0"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: keda-metrics-apiserver
      containers:
      - name: keda-metrics-apiserver
        image: ghcr.io/kedacore/keda-metrics-apiserver:2.12.0
        imagePullPolicy: IfNotPresent
        args:
        - /usr/local/bin/keda-adapter
        - --secure-port=6443
        - --logtostderr=true
        - --v=0
        - --client-ca-file=/certs/ca.crt
        - --tls-cert-file=/certs/tls.crt
        - --tls-private-key-file=/certs/tls.key
        - --cert-dir=/certs
        - --metrics-bind-addr=:8080
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KEDA_HTTP_DEFAULT_TIMEOUT
          value: "3000"
        ports:
        - name: https
          containerPort: 6443
          protocol: TCP
        - name: metrics
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        volumeMounts:
        - name: certificates
          mountPath: /certs
          readOnly: true
      volumes:
      - name: certificates
        secret:
          secretName: kedaorg-certs
          defaultMode: 420
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keda-operator
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: keda

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keda-metrics-apiserver
  namespace: keda
  labels:
    app.kubernetes.io/name: keda-metrics-apiserver
    app.kubernetes.io/component: metrics-apiserver
    app.kubernetes.io/part-of: keda

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: keda-operator
  labels:
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: keda
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - events
  - secrets
  - pods
  - services
  - namespaces
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - "apps"
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - "autoscaling"
  resources:
  - horizontalpodautoscalers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - "keda.sh"
  resources:
  - scaledobjects
  - scaledjobs
  - triggerauthentications
  - clustertriggerauthentications
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - "metrics.k8s.io"
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: keda-operator
  labels:
    app.kubernetes.io/name: keda-operator
    app.kubernetes.io/component: operator
    app.kubernetes.io/part-of: keda
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: keda-operator
subjects:
- kind: ServiceAccount
  name: keda-operator
  namespace: keda

---
apiVersion: v1
kind: Service
metadata:
  name: keda-operator-metrics-apiserver
  namespace: keda
  labels:
    app: keda-metrics-apiserver
    app.kubernetes.io/name: keda-metrics-apiserver
    app.kubernetes.io/component: metrics-apiserver
    app.kubernetes.io/part-of: keda
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app: keda-metrics-apiserver

---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.external.metrics.k8s.io
  labels:
    app.kubernetes.io/name: keda-metrics-apiserver
    app.kubernetes.io/component: metrics-apiserver
    app.kubernetes.io/part-of: keda
spec:
  service:
    name: keda-operator-metrics-apiserver
    namespace: keda
  group: external.metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100