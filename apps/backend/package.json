{
  "name": "@personachain/enterprise-backend",
  "version": "3.0.0",
  "description": "PersonaChain Enterprise Backend - 50,000+ lines of production-grade identity platform",
  "main": "dist/index.js",
  "scripts": {
    "start": "NODE_ENV=production node index.js",
    "start:prod": "NODE_ENV=production node dist/index-production.js",
    "start:production": "NODE_ENV=production ts-node src/index-production.ts",
    "start:dev": "nodemon --exec ts-node src/index.ts",
    "dev": "nodemon --exec ts-node src/index.ts",
    "build": "echo 'Using pre-built JavaScript files'",
    "build:prod": "tsc src/index-production.ts --outDir dist --target es2020 --module commonjs --strict --esModuleInterop --skipLibCheck",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:integration": "jest --config jest.integration.config.js",
    "test:e2e": "jest --config jest.e2e.config.js",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "security:scan": "audit-ci --config .audit-ci.json",
    "benchmark": "ts-node benchmarks/performance.ts",
    "db:migrate": "ts-node scripts/migrate.ts",
    "db:seed": "ts-node scripts/seed.ts",
    "db:reset": "ts-node scripts/reset.ts",
    "deploy:gcp": "gcloud app deploy app.yaml",
    "deploy:aws": "serverless deploy",
    "docker:build": "docker build -t personachain/backend .",
    "docker:run": "docker run -p 8080:8080 personachain/backend",
    "monitoring:start": "ts-node src/monitoring/server.ts",
    "compliance:audit": "ts-node src/compliance/audit.ts",
    "security:test": "ts-node src/security/test.ts"
  },
  "keywords": [
    "personapass",
    "backend",
    "api",
    "zero-knowledge",
    "verifier",
    "cosmos"
  ],
  "author": "PersonaPass Team",
  "license": "MIT",
  "dependencies": {
    "@cosmjs/cosmwasm-stargate": "^0.32.4",
    "@cosmjs/proto-signing": "^0.32.4",
    "@cosmjs/stargate": "^0.32.4",
    "@opentelemetry/api": "^1.7.0",
    "@opentelemetry/auto-instrumentations-node": "^0.39.4",
    "@opentelemetry/exporter-jaeger": "^1.17.0",
    "@opentelemetry/exporter-prometheus": "^0.45.0",
    "@opentelemetry/sdk-node": "^0.45.0",
    "audit-ci": "^6.6.1",
    "bcrypt": "^5.1.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "morgan": "^1.10.0",
    "node-cron": "^3.0.3",
    "nodemailer": "^6.9.7",
    "pg": "^8.11.3",
    "prometheus-api-metrics": "^3.2.2",
    "prom-client": "^15.0.0",
    "redis": "^4.6.11",
    "sharp": "^0.33.0",
    "socket.io": "^4.7.5",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "uuid": "^9.0.1",
    "validator": "^13.11.0",
    "winston": "^3.11.0",
    "ws": "^8.14.2",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/lodash": "^4.14.202",
    "@types/morgan": "^1.9.9",
    "@types/node": "^20.10.4",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.14",
    "@types/pg": "^8.10.9",
    "@types/sharp": "^0.32.0",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.6",
    "@types/uuid": "^9.0.7",
    "@types/validator": "^13.11.7",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "eslint": "^8.56.0",
    "jest": "^29.7.0",
    "nodemon": "^3.0.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
