import{ay as T,b as x,e as E}from"./index-4ObsLF-s.js";import{d as G}from"./didService-DqvDgkur.js";let v;const H=new Uint8Array(16);function V(){if(!v&&(v=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!v))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return v(H)}const j=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function R(n){return typeof n=="string"&&j.test(n)}const u=[];for(let n=0;n<256;++n)u.push((n+256).toString(16).slice(1));function U(n,t=0){return u[n[t+0]]+u[n[t+1]]+u[n[t+2]]+u[n[t+3]]+"-"+u[n[t+4]]+u[n[t+5]]+"-"+u[n[t+6]]+u[n[t+7]]+"-"+u[n[t+8]]+u[n[t+9]]+"-"+u[n[t+10]]+u[n[t+11]]+u[n[t+12]]+u[n[t+13]]+u[n[t+14]]+u[n[t+15]]}function $(n){if(!R(n))throw TypeError("Invalid UUID");let t;const e=new Uint8Array(16);return e[0]=(t=parseInt(n.slice(0,8),16))>>>24,e[1]=t>>>16&255,e[2]=t>>>8&255,e[3]=t&255,e[4]=(t=parseInt(n.slice(9,13),16))>>>8,e[5]=t&255,e[6]=(t=parseInt(n.slice(14,18),16))>>>8,e[7]=t&255,e[8]=(t=parseInt(n.slice(19,23),16))>>>8,e[9]=t&255,e[10]=(t=parseInt(n.slice(24,36),16))/1099511627776&255,e[11]=t/4294967296&255,e[12]=t>>>24&255,e[13]=t>>>16&255,e[14]=t>>>8&255,e[15]=t&255,e}function P(n){n=unescape(encodeURIComponent(n));const t=[];for(let e=0;e<n.length;++e)t.push(n.charCodeAt(e));return t}const F="6ba7b810-9dad-11d1-80b4-00c04fd430c8",L="6ba7b811-9dad-11d1-80b4-00c04fd430c8";function _(n,t,e){function r(o,a,i,s){var l;if(typeof o=="string"&&(o=P(o)),typeof a=="string"&&(a=$(a)),((l=a)===null||l===void 0?void 0:l.length)!==16)throw TypeError("Namespace must be array-like (16 iterable integer values, 0-255)");let c=new Uint8Array(16+o.length);if(c.set(a),c.set(o,a.length),c=e(c),c[6]=c[6]&15|t,c[8]=c[8]&63|128,i){s=s||0;for(let w=0;w<16;++w)i[s+w]=c[w];return i}return U(c)}try{r.name=n}catch{}return r.DNS=F,r.URL=L,r}function N(n){if(typeof n=="string"){const t=unescape(encodeURIComponent(n));n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n[e]=t.charCodeAt(e)}return M(z(B(n),n.length*8))}function M(n){const t=[],e=n.length*32,r="0123456789abcdef";for(let o=0;o<e;o+=8){const a=n[o>>5]>>>o%32&255,i=parseInt(r.charAt(a>>>4&15)+r.charAt(a&15),16);t.push(i)}return t}function O(n){return(n+64>>>9<<4)+14+1}function z(n,t){n[t>>5]|=128<<t%32,n[O(t)-1]=t;let e=1732584193,r=-271733879,o=-1732584194,a=271733878;for(let i=0;i<n.length;i+=16){const s=e,l=r,c=o,w=a;e=f(e,r,o,a,n[i],7,-680876936),a=f(a,e,r,o,n[i+1],12,-389564586),o=f(o,a,e,r,n[i+2],17,606105819),r=f(r,o,a,e,n[i+3],22,-1044525330),e=f(e,r,o,a,n[i+4],7,-176418897),a=f(a,e,r,o,n[i+5],12,1200080426),o=f(o,a,e,r,n[i+6],17,-1473231341),r=f(r,o,a,e,n[i+7],22,-45705983),e=f(e,r,o,a,n[i+8],7,1770035416),a=f(a,e,r,o,n[i+9],12,-1958414417),o=f(o,a,e,r,n[i+10],17,-42063),r=f(r,o,a,e,n[i+11],22,-1990404162),e=f(e,r,o,a,n[i+12],7,1804603682),a=f(a,e,r,o,n[i+13],12,-40341101),o=f(o,a,e,r,n[i+14],17,-1502002290),r=f(r,o,a,e,n[i+15],22,1236535329),e=g(e,r,o,a,n[i+1],5,-165796510),a=g(a,e,r,o,n[i+6],9,-1069501632),o=g(o,a,e,r,n[i+11],14,643717713),r=g(r,o,a,e,n[i],20,-373897302),e=g(e,r,o,a,n[i+5],5,-701558691),a=g(a,e,r,o,n[i+10],9,38016083),o=g(o,a,e,r,n[i+15],14,-660478335),r=g(r,o,a,e,n[i+4],20,-405537848),e=g(e,r,o,a,n[i+9],5,568446438),a=g(a,e,r,o,n[i+14],9,-1019803690),o=g(o,a,e,r,n[i+3],14,-187363961),r=g(r,o,a,e,n[i+8],20,1163531501),e=g(e,r,o,a,n[i+13],5,-1444681467),a=g(a,e,r,o,n[i+2],9,-51403784),o=g(o,a,e,r,n[i+7],14,1735328473),r=g(r,o,a,e,n[i+12],20,-1926607734),e=h(e,r,o,a,n[i+5],4,-378558),a=h(a,e,r,o,n[i+8],11,-2022574463),o=h(o,a,e,r,n[i+11],16,1839030562),r=h(r,o,a,e,n[i+14],23,-35309556),e=h(e,r,o,a,n[i+1],4,-1530992060),a=h(a,e,r,o,n[i+4],11,1272893353),o=h(o,a,e,r,n[i+7],16,-155497632),r=h(r,o,a,e,n[i+10],23,-1094730640),e=h(e,r,o,a,n[i+13],4,681279174),a=h(a,e,r,o,n[i],11,-358537222),o=h(o,a,e,r,n[i+3],16,-722521979),r=h(r,o,a,e,n[i+6],23,76029189),e=h(e,r,o,a,n[i+9],4,-640364487),a=h(a,e,r,o,n[i+12],11,-421815835),o=h(o,a,e,r,n[i+15],16,530742520),r=h(r,o,a,e,n[i+2],23,-995338651),e=p(e,r,o,a,n[i],6,-198630844),a=p(a,e,r,o,n[i+7],10,1126891415),o=p(o,a,e,r,n[i+14],15,-1416354905),r=p(r,o,a,e,n[i+5],21,-57434055),e=p(e,r,o,a,n[i+12],6,1700485571),a=p(a,e,r,o,n[i+3],10,-1894986606),o=p(o,a,e,r,n[i+10],15,-1051523),r=p(r,o,a,e,n[i+1],21,-2054922799),e=p(e,r,o,a,n[i+8],6,1873313359),a=p(a,e,r,o,n[i+15],10,-30611744),o=p(o,a,e,r,n[i+6],15,-1560198380),r=p(r,o,a,e,n[i+13],21,1309151649),e=p(e,r,o,a,n[i+4],6,-145523070),a=p(a,e,r,o,n[i+11],10,-1120210379),o=p(o,a,e,r,n[i+2],15,718787259),r=p(r,o,a,e,n[i+9],21,-343485551),e=S(e,s),r=S(r,l),o=S(o,c),a=S(a,w)}return[e,r,o,a]}function B(n){if(n.length===0)return[];const t=n.length*8,e=new Uint32Array(O(t));for(let r=0;r<t;r+=8)e[r>>5]|=(n[r/8]&255)<<r%32;return e}function S(n,t){const e=(n&65535)+(t&65535);return(n>>16)+(t>>16)+(e>>16)<<16|e&65535}function J(n,t){return n<<t|n>>>32-t}function y(n,t,e,r,o,a){return S(J(S(S(t,n),S(r,a)),o),e)}function f(n,t,e,r,o,a,i){return y(t&e|~t&r,n,t,o,a,i)}function g(n,t,e,r,o,a,i){return y(t&r|e&~r,n,t,o,a,i)}function h(n,t,e,r,o,a,i){return y(t^e^r,n,t,o,a,i)}function p(n,t,e,r,o,a,i){return y(e^(t|~r),n,t,o,a,i)}const te=_("v3",48,N),q=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),k={randomUUID:q};function b(n,t,e){if(k.randomUUID&&!t&&!n)return k.randomUUID();n=n||{};const r=n.random||(n.rng||V)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,t){e=e||0;for(let o=0;o<16;++o)t[e+o]=r[o];return t}return U(r)}function Y(n,t,e,r){switch(n){case 0:return t&e^~t&r;case 1:return t^e^r;case 2:return t&e^t&r^e&r;case 3:return t^e^r}}function A(n,t){return n<<t|n>>>32-t}function W(n){const t=[1518500249,1859775393,2400959708,3395469782],e=[1732584193,4023233417,2562383102,271733878,3285377520];if(typeof n=="string"){const i=unescape(encodeURIComponent(n));n=[];for(let s=0;s<i.length;++s)n.push(i.charCodeAt(s))}else Array.isArray(n)||(n=Array.prototype.slice.call(n));n.push(128);const r=n.length/4+2,o=Math.ceil(r/16),a=new Array(o);for(let i=0;i<o;++i){const s=new Uint32Array(16);for(let l=0;l<16;++l)s[l]=n[i*64+l*4]<<24|n[i*64+l*4+1]<<16|n[i*64+l*4+2]<<8|n[i*64+l*4+3];a[i]=s}a[o-1][14]=(n.length-1)*8/Math.pow(2,32),a[o-1][14]=Math.floor(a[o-1][14]),a[o-1][15]=(n.length-1)*8&4294967295;for(let i=0;i<o;++i){const s=new Uint32Array(80);for(let d=0;d<16;++d)s[d]=a[i][d];for(let d=16;d<80;++d)s[d]=A(s[d-3]^s[d-8]^s[d-14]^s[d-16],1);let l=e[0],c=e[1],w=e[2],m=e[3],C=e[4];for(let d=0;d<80;++d){const I=Math.floor(d/20),D=A(l,5)+Y(I,c,w,m)+C+t[I]+s[d]>>>0;C=m,m=w,w=A(c,30)>>>0,c=l,l=D}e[0]=e[0]+l>>>0,e[1]=e[1]+c>>>0,e[2]=e[2]+w>>>0,e[3]=e[3]+m>>>0,e[4]=e[4]+C>>>0}return[e[0]>>24&255,e[0]>>16&255,e[0]>>8&255,e[0]&255,e[1]>>24&255,e[1]>>16&255,e[1]>>8&255,e[1]&255,e[2]>>24&255,e[2]>>16&255,e[2]>>8&255,e[2]&255,e[3]>>24&255,e[3]>>16&255,e[3]>>8&255,e[3]&255,e[4]>>24&255,e[4]>>16&255,e[4]>>8&255,e[4]&255]}const re=_("v5",80,W);class K{async createVCFromOAuth(t){try{console.log(`🔄 Converting ${t.platform} OAuth to VC...`);const e=await G.getActiveDid();if(!e)throw new Error("No active DID found");let r;switch(t.platform){case"github":r=await this.createGitHubVC(e,t.userData);break;case"linkedin":r=await this.createLinkedInVC(e,t.userData);break;case"plaid":r=await this.createPlaidVC(e,t.userData);break;case"stripe":r=await this.createStripeVC(e,t.userData);break;default:r=await this.createGenericVC(e,t)}return await T.storeCredential(r),await x.track("credential_created",{platform:t.platform,credentialType:r.type[1],did:e}),console.log("✅ Verifiable Credential created and stored successfully!"),r}catch(e){throw E.logError("Failed to create VC from OAuth:",e),e}}async createGitHubVC(t,e){return{"@context":["https://www.w3.org/2018/credentials/v1","https://w3id.org/citizenship/v1"],id:`urn:uuid:${b()}`,type:["VerifiableCredential","GitHubDeveloperCredential"],issuer:"did:web:personapass.xyz",issuanceDate:new Date().toISOString(),expirationDate:new Date(Date.now()+365*24*60*60*1e3).toISOString(),credentialSubject:{id:t,platform:"github",username:e.login,name:e.name,email:e.email,publicRepos:e.public_repos,followers:e.followers,createdAt:e.created_at,verified:!0,profileUrl:e.html_url,developerStats:{totalStars:e.stats?.totalStars||0,totalForks:e.stats?.totalForks||0,languages:e.stats?.languages||{},contributionScore:e.stats?.contributionScore||0}}}}async createLinkedInVC(t,e){return{"@context":["https://www.w3.org/2018/credentials/v1","https://w3id.org/citizenship/v1"],id:`urn:uuid:${b()}`,type:["VerifiableCredential","LinkedInProfessionalCredential"],issuer:"did:web:personapass.xyz",issuanceDate:new Date().toISOString(),expirationDate:new Date(Date.now()+365*24*60*60*1e3).toISOString(),credentialSubject:{id:t,platform:"linkedin",name:`${e.firstName} ${e.lastName}`,email:e.emailAddress,headline:e.headline,profileUrl:e.publicProfileUrl,verified:!0,professionalData:{industry:e.industry,positions:e.positions?.values||[],education:e.educations?.values||[],skills:e.skills?.values||[],connections:e.numConnections}}}}async createPlaidVC(t,e){return{"@context":["https://www.w3.org/2018/credentials/v1","https://w3id.org/citizenship/v1"],id:`urn:uuid:${b()}`,type:["VerifiableCredential","PlaidFinancialCredential"],issuer:"did:web:personapass.xyz",issuanceDate:new Date().toISOString(),expirationDate:new Date(Date.now()+2160*60*60*1e3).toISOString(),credentialSubject:{id:t,platform:"plaid",verified:!0,financialProfile:{accountsConnected:e.accounts?.length||0,institutionsLinked:e.institutions||[],verificationDate:new Date().toISOString(),hasVerifiedAccounts:!0,accountTypes:e.accounts?.map(r=>r.type)||[]}}}}async createStripeVC(t,e){return{"@context":["https://www.w3.org/2018/credentials/v1","https://w3id.org/citizenship/v1"],id:`urn:uuid:${b()}`,type:["VerifiableCredential","StripeIdentityCredential"],issuer:"did:web:personapass.xyz",issuanceDate:new Date().toISOString(),expirationDate:new Date(Date.now()+365*24*60*60*1e3).toISOString(),credentialSubject:{id:t,platform:"stripe",verified:!0,identityVerification:{status:e.status,verifiedAt:e.created,documentType:e.document?.type,liveness:e.selfie?.status==="verified",riskScore:e.risk_score,verificationId:e.id}}}}async createGenericVC(t,e){return{"@context":["https://www.w3.org/2018/credentials/v1","https://w3id.org/citizenship/v1"],id:`urn:uuid:${b()}`,type:["VerifiableCredential","PlatformCredential"],issuer:"did:web:personapass.xyz",issuanceDate:new Date().toISOString(),expirationDate:new Date(Date.now()+365*24*60*60*1e3).toISOString(),credentialSubject:{id:t,platform:e.platform,verified:!0,userData:e.userData,metadata:e.metadata}}}async batchCreateVCs(t){console.log(`📦 Batch creating ${t.length} VCs...`);const e=[];for(const r of t)try{const o=await this.createVCFromOAuth(r);e.push(o)}catch(o){console.error(`Failed to create VC for ${r.platform}:`,o)}return console.log(`✅ Created ${e.length}/${t.length} VCs successfully`),e}}const X=new K;class Q{accessToken=null;baseURL="https://api.github.com";credentialData=null;setAccessToken(t){this.accessToken=t,console.log("🐙 GitHub access token set successfully")}async startOAuthFlow(){console.log("🚀🚀🚀 Using Railway backend for GitHub OAuth flow"),this.clearOldCredentialData();try{const t=await fetch("https://api.personapass.xyz/oauth/github/init",{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`Railway API error: ${t.status}`);const e=await t.json();return console.log("✅ Got OAuth URL from Railway backend:",e.authUrl),e.authUrl}catch(t){throw console.error("❌ Failed to start OAuth flow via Railway backend:",t),t}}clearOldCredentialData(){console.log("🧹 CLEARING old credential data for fresh session..."),localStorage.removeItem("github_credential_cache_v3"),this.accessToken=null,this.credentialData=null,console.log("✅ Old credential data cleared - OAuth state preserved for validation")}clearOAuthStateAfterValidation(){console.log("🧹 CLEARING OAuth state after successful validation..."),sessionStorage.removeItem("github_oauth_state"),localStorage.removeItem("github_oauth_state_backup"),console.log("✅ OAuth state cleared after successful validation")}async exchangeCodeForToken(t,e){console.log("🚀 GITHUB OAUTH: Processing OAuth callback"),console.log("🔄 OAuth Code:",t.substring(0,10)+"..."),console.log("🔄 State param:",e||"none"),console.log("🔑 REAL MODE: Exchanging code for actual GitHub access token...");try{console.log("🔑 Step 1: Exchanging code via secure serverless function...");const o="https://personapass.xyz/api/api/github-oauth";console.log("🔍 Using OAuth endpoint:",o);const a=await fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:t,state:e})});if(console.log("🔍 Serverless response status:",a.status),console.log("🔍 Serverless response headers:",Object.fromEntries(a.headers.entries())),!a.ok){const c=await a.text();console.error("❌ Serverless function failed:",{status:a.status,statusText:a.statusText,responseText:c.substring(0,500)+"..."});let w;try{w=JSON.parse(c)}catch{w={error:c||`Server error: ${a.status}`}}throw new Error(w.error||`Server error: ${a.status}`)}const i=await a.text();console.log("🔍 Raw serverless response:",i.substring(0,500)+"...");let s;try{s=JSON.parse(i)}catch(c){throw console.error("❌ Failed to parse serverless response as JSON:",c),console.error("🔍 Response text:",i),new Error("Invalid response from authentication server")}if(!s.success)throw new Error(s.error||"GitHub authentication failed");console.log("🎉 REAL GitHub data received for user:",s.user.login),this.setAccessToken(s.access_token),console.log("🔄 Creating Verifiable Credential from GitHub data...");const l=await X.createVCFromOAuth({platform:"github",accessToken:s.access_token,userData:{...s.user,stats:s.credential?.stats||{}}});return this.credentialData=s.credential,localStorage.setItem("github_credential_cache_v3",JSON.stringify(s.credential)),console.log("✅ GitHub Verifiable Credential created and stored!"),this.clearOAuthStateAfterValidation(),s.access_token}catch(r){throw console.error("❌ Failed to get real GitHub data:",r),new Error(`GitHub OAuth failed: ${r instanceof Error?r.message:"Unknown error"}`)}}createCredentialFromRealData(t,e){console.log("🏗️ Creating credential from REAL GitHub data...");const r={id:`github_cred_${Date.now()}_${Math.random().toString(36).substring(2,9)}`,"@context":["https://www.w3.org/2018/credentials/v1","https://persona.xyz/contexts/v1"],type:["VerifiableCredential","GitHubCredential"],issuer:"did:persona:github",issuanceDate:new Date().toISOString(),credentialSubject:{id:`did:persona:user_${t.id}`,platform:"github",username:t.login,userId:t.id,name:t.name||t.login,email:t.email||"private",publicRepos:t.public_repos||0,followers:t.followers||0,following:t.following||0,memberSince:t.created_at||new Date().toISOString(),bio:t.bio||"GitHub Developer",company:t.company||null,location:t.location||null,avatarUrl:t.avatar_url,profileUrl:t.html_url,verifiedAt:new Date().toISOString(),accessToken:e.substring(0,8)+"..."},proof:{type:"Ed25519Signature2020",created:new Date().toISOString(),proofPurpose:"assertionMethod",verificationMethod:"did:persona:github#key-1"},blockchainTxHash:`0x${Math.random().toString(16).substring(2,66)}`};return console.log("🎉 REAL GitHub credential created:",{id:r.id,username:r.credentialSubject.username,name:r.credentialSubject.name,repos:r.credentialSubject.publicRepos,followers:r.credentialSubject.followers}),r}async getUser(){if(!this.accessToken)throw new Error("GitHub access token required");try{const t=await fetch(`${this.baseURL}/user`,{headers:{Authorization:`Bearer ${this.accessToken}`,Accept:"application/vnd.github.v3+json"}});if(!t.ok)throw new Error(`GitHub API error: ${t.status} ${t.statusText}`);return await t.json()}catch(t){throw console.error("❌ Failed to get GitHub user:",t),t}}async getRepositories(t=1,e=100){if(!this.accessToken)throw new Error("GitHub access token required");try{const r=new URL(`${this.baseURL}/user/repos`);r.searchParams.set("type","owner"),r.searchParams.set("sort","updated"),r.searchParams.set("per_page",e.toString()),r.searchParams.set("page",t.toString());const o=await fetch(r.toString(),{headers:{Authorization:`Bearer ${this.accessToken}`,Accept:"application/vnd.github.v3+json"}});if(!o.ok)throw new Error(`GitHub API error: ${o.status} ${o.statusText}`);return await o.json()}catch(r){throw console.error("❌ Failed to get GitHub repositories:",r),r}}async getDeveloperStats(){try{console.log("📊 Calculating GitHub developer statistics...");const t=await this.getRepositories(),e={totalStars:0,totalForks:0,totalCommits:0,languages:{},topRepositories:[],contributionScore:0};for(const r of t)e.totalStars+=r.stargazers_count,e.totalForks+=r.forks_count,r.language&&(e.languages[r.language]=(e.languages[r.language]||0)+1);return e.topRepositories=t.sort((r,o)=>o.stargazers_count-r.stargazers_count).slice(0,10),e.contributionScore=Math.min(100,Math.round(e.totalStars*2+e.totalForks*1.5+t.length*.5)),console.log("✅ GitHub developer statistics calculated:",e),e}catch(t){throw console.error("❌ Failed to calculate GitHub developer stats:",t),t}}async generateDeveloperCredential(){try{console.log("🏆 Generating GitHub developer credential...");const t=this.getStoredCredential();if(t){console.log("✅ Using stored credential data from OAuth flow");const a={user:{id:t.credentialSubject.githubId,login:t.credentialSubject.username,name:t.credentialSubject.name,email:t.credentialSubject.email||"",bio:t.credentialSubject.bio||"",public_repos:t.credentialSubject.publicRepos,followers:t.credentialSubject.followers,following:t.credentialSubject.following||0,created_at:t.credentialSubject.accountCreated,updated_at:new Date().toISOString(),avatar_url:t.credentialSubject.avatarUrl,html_url:t.credentialSubject.profileUrl},stats:{totalStars:t.credentialSubject.totalStars||0,totalForks:t.credentialSubject.totalForks||0,totalCommits:t.credentialSubject.totalCommits||0,languages:t.credentialSubject.topLanguages||{},topRepositories:t.credentialSubject.topRepositories||[],contributionScore:t.credentialSubject.contributionScore||0},verificationDate:t.issuanceDate||new Date().toISOString(),credentialType:"DeveloperSkillCredential"};return console.log("✅ GitHub developer credential generated from stored data:",{username:a.user.login,repos:a.user.public_repos,stars:a.stats.totalStars,score:a.stats.contributionScore}),a}console.log("⚠️ No stored credential data, making API calls...");const[e,r]=await Promise.all([this.getUser(),this.getDeveloperStats()]),o={user:e,stats:r,verificationDate:new Date().toISOString(),credentialType:"DeveloperSkillCredential"};return console.log("✅ GitHub developer credential generated via API:",{username:e.login,repos:e.public_repos,stars:r.totalStars,score:r.contributionScore}),o}catch(t){throw console.error("❌ Failed to generate GitHub developer credential:",t),t}}async testConnection(){try{return this.accessToken?{success:!0,user:(await this.getUser()).login}:{success:!1,error:"No access token available. Please authenticate with GitHub first."}}catch(t){return{success:!1,error:t instanceof Error?t.message:"Unknown error"}}}getStoredCredential(){if(this.credentialData)return console.log("🔍 HEAVY DEBUG: Found credential in service memory:",{hasCredential:!0,credentialType:typeof this.credentialData,credentialId:this.credentialData?.id,credentialPreview:JSON.stringify(this.credentialData).substring(0,200)+"..."}),this.credentialData;try{const t=localStorage.getItem("github_credential_cache_v3");if(t){const e=JSON.parse(t);return this.credentialData=e,console.log("🔍 HEAVY DEBUG: Found credential in localStorage cache:",{hasCredential:!0,credentialType:typeof e,credentialId:e?.id,credentialPreview:JSON.stringify(e).substring(0,200)+"..."}),e}}catch(t){console.error("❌ Error reading cached credential:",t)}return console.log("🔍 HEAVY DEBUG: No stored credential found:",{hasCredential:!1,credentialType:typeof this.credentialData,credentialId:void 0,credentialPreview:"null"}),null}clearToken(){this.accessToken=null,this.credentialData=null,sessionStorage.removeItem("github_oauth_state"),localStorage.removeItem("github_oauth_state_backup"),console.log("🧹 GitHub token and credential cleared")}}const ne=new Q;export{Q as GitHubAPIService,ne as githubAPIService};
