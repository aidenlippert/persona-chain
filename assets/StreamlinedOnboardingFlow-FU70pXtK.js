import{e as g,E as A,a as I,u as F,r as N,s as E,b as S,c as H,j as t,m as x,A as B}from"./index-BVH3G8-4.js";import{p as D,E as j}from"./EliteWeb3Button-B7k2nWRZ.js";import{d as G}from"./didService-BQO5nZK8.js";class R{constructor(e){this.config=e}state="closed";failureCount=0;lastFailureTime=0;successCount=0;async execute(e){if(this.state==="open")if(Date.now()-this.lastFailureTime>this.config.resetTimeout)this.state="half_open",this.successCount=0;else throw new Error("Circuit breaker is OPEN - operation blocked");try{const a=await e();return this.onSuccess(),a}catch(a){throw this.onFailure(),a}}onSuccess(){this.failureCount=0,this.state==="half_open"&&(this.successCount++,this.successCount>=3&&(this.state="closed"))}onFailure(){this.failureCount++,this.lastFailureTime=Date.now(),this.failureCount>=this.config.failureThreshold&&(this.state="open")}getState(){return this.state}getMetrics(){return{state:this.state,failureCount:this.failureCount,successCount:this.successCount,lastFailureTime:this.lastFailureTime}}}class b{static instance;circuitBreakers=new Map;static DEFAULT_CONFIGS={api_call:{maxAttempts:3,baseDelay:1e3,maxDelay:1e4,backoffMultiplier:2,jitter:!0,retryCondition:e=>e?.code==="ECONNABORTED"||e?.code==="TIMEOUT"||e?.code==="NETWORK_ERROR"||e?.status>=500&&e?.status<600||e?.status===429},oauth_flow:{maxAttempts:2,baseDelay:2e3,maxDelay:5e3,backoffMultiplier:2,jitter:!0,retryCondition:e=>e?.code==="ECONNABORTED"||e?.code==="TIMEOUT"||e?.code==="NETWORK_ERROR"||e?.status>=500||e?.status===429||e?.retryable===!0||e?.message&&(e.message.includes("network")||e.message.includes("timeout")||e.message.includes("connection"))},blockchain_tx:{maxAttempts:5,baseDelay:3e3,maxDelay:3e4,backoffMultiplier:2,jitter:!0,retryCondition:e=>e?.message?.includes("network")||e?.message?.includes("timeout")||e?.message?.includes("gas")||e?.message?.includes("nonce")},credential_creation:{maxAttempts:3,baseDelay:1500,maxDelay:8e3,backoffMultiplier:2,jitter:!0,retryCondition:e=>e?.category!=="validation"&&(e?.retryable===!0||e?.status>=500||e?.code==="TIMEOUT")}};constructor(){}static getInstance(){return b.instance||(b.instance=new b),b.instance}async executeWithRetry(e,a="api_call",p){const l={...b.DEFAULT_CONFIGS[a],...p},u=Date.now();let i,n=0;const c=this.getCircuitBreaker(a);for(n=1;n<=l.maxAttempts;n++)try{return c.getState()==="open"?{success:!1,error:g.createError("CIRCUIT_BREAKER_OPEN",`Circuit breaker is open for ${a}`,A.NETWORK,I.HIGH,g.createContext({component:"retry-service",action:a,metadata:{attempts:n,circuitState:c.getState(),circuitMetrics:c.getMetrics()}}),{retryable:!1,userMessage:"Service temporarily unavailable. Please try again later.",recoveryActions:["wait_and_retry","check_status"]}),attempts:n,totalDuration:Date.now()-u,circuitBreakerTripped:!0}:{success:!0,result:await c.execute(e),attempts:n,totalDuration:Date.now()-u}}catch(f){i=f;const h=g.createError("RETRY_ATTEMPT_FAILED",`Attempt ${n}/${l.maxAttempts} failed for ${a}`,A.NETWORK,n===l.maxAttempts?I.HIGH:I.LOW,g.createContext({component:"retry-service",action:a,metadata:{attempt:n,maxAttempts:l.maxAttempts,operationType:a,circuitState:c.getState()}}),{retryable:n<l.maxAttempts,originalError:f,userMessage:n<l.maxAttempts?`Retrying operation (attempt ${n}/${l.maxAttempts})...`:"Operation failed after multiple attempts."});if(g.reportError(h),l.onRetry)try{l.onRetry(n,f)}catch(k){console.warn("Error in retry callback:",k)}if(!(n<l.maxAttempts&&(l.retryCondition?l.retryCondition(f):!0))){console.log(`⏭️ Skipping retry for ${a} (attempt ${n}/${l.maxAttempts}): retry condition not met`);break}if(n<l.maxAttempts){const k=this.calculateDelay(n,l);await this.sleep(k)}}if(l.onMaxRetriesReached)try{l.onMaxRetriesReached(i)}catch(f){console.warn("Error in max retries callback:",f)}return{success:!1,error:g.createError("MAX_RETRIES_EXCEEDED",`Operation ${a} failed after ${n} attempts`,A.NETWORK,I.HIGH,g.createContext({component:"retry-service",action:a,metadata:{attempts:n,maxAttempts:l.maxAttempts,operationType:a,totalDuration:Date.now()-u}}),{retryable:!1,originalError:i,userMessage:"Operation failed after multiple attempts. Please try again later.",recoveryActions:["check_network","try_later","contact_support"]}),attempts:n,totalDuration:Date.now()-u}}async retryOAuthOperation(e,a,p){const l={...b.DEFAULT_CONFIGS.oauth_flow,...p,onRetry:(u,i)=>{console.log(`[LOADING] Retrying ${a} OAuth (attempt ${u}):`,i.message)},onMaxRetriesReached:u=>{g.logError(`[ERROR] ${a} OAuth failed after all retries:`,u)}};return this.executeWithRetry(e,`oauth_${a}`,l)}async retryApiCall(e,a,p){const l={...b.DEFAULT_CONFIGS.api_call,...p,onRetry:(u,i)=>{console.log(`[LOADING] Retrying ${a} API call (attempt ${u}):`,i.message)}};return this.executeWithRetry(e,`api_${a}`,l)}async retryCredentialCreation(e,a,p){const l={...b.DEFAULT_CONFIGS.credential_creation,...p,onRetry:(u,i)=>{console.log(`[LOADING] Retrying ${a} credential creation (attempt ${u}):`,i.message)}};return this.executeWithRetry(e,`credential_${a}`,l)}getCircuitBreaker(e){if(!this.circuitBreakers.has(e)){const a={failureThreshold:5,resetTimeout:6e4,monitoringPeriod:3e4};this.circuitBreakers.set(e,new R(a))}return this.circuitBreakers.get(e)}calculateDelay(e,a){const p=Math.min(a.baseDelay*Math.pow(a.backoffMultiplier,e-1),a.maxDelay);if(a.jitter){const l=p*.25,u=(Math.random()-.5)*2*l;return Math.max(0,p+u)}return p}sleep(e){return new Promise(a=>setTimeout(a,e))}getCircuitBreakerMetrics(){const e={};for(const[a,p]of this.circuitBreakers.entries())e[a]=p.getMetrics();return e}resetCircuitBreaker(e){if(this.circuitBreakers.get(e)){const p={failureThreshold:5,resetTimeout:6e4,monitoringPeriod:3e4};return this.circuitBreakers.set(e,new R(p)),!0}return!1}getServiceHealth(){const e={};let a=!0;for(const[p,l]of this.circuitBreakers.entries()){const u=l.getMetrics(),i=u.state!=="open";e[p]={healthy:i,state:u.state,failureCount:u.failureCount,lastFailureTime:u.lastFailureTime},i||(a=!1)}return{healthy:a,details:e}}}const P=b.getInstance();class U{constructor(){}async createTest(e){return{...e,id:"stub",updatedAt:Date.now()}}async getUserVariant(e,a){return null}async trackConversion(e,a,p,l=1){}getVariantConfig(e,a){return{}}isInVariant(e,a,p){return!1}getTestResults(e){return null}getActiveTests(){return[]}async updateTestStatus(e,a){}}const _=new U,T={connect:30,identity:60,complete:10},J=()=>{const w=F(),[e]=N.useState(()=>localStorage.getItem("persona_user_id")||"anonymous"),[a]=N.useState(()=>Date.now()),[p,l]=N.useState(Date.now()),[u]=N.useState(()=>_.getUserVariant(e,"onboarding_optimization")||"control"),[i,n]=N.useState({step:"connect",completion:0,subProgress:0,isLoading:!1,error:null,autoSaved:!1}),[c,C]=N.useState({wallet:null,didKeyPair:null,recoveryPhrase:[],txHash:null}),f=N.useCallback(async(y,r)=>{try{const o={timestamp:Date.now(),step:r.step,completion:r.completion,wallet:y.wallet,didKeyPair:y.didKeyPair?{did:y.didKeyPair.did,publicKey:y.didKeyPair.publicKey}:null,recoveryPhrase:y.recoveryPhrase,txHash:y.txHash};await E.setItem("onboarding_progress",JSON.stringify(o)),n(s=>({...s,autoSaved:!0})),setTimeout(()=>{n(s=>({...s,autoSaved:!1}))},2e3),console.log("[LOADING] Auto-saved onboarding progress")}catch(o){console.warn("[WARNING] Auto-save failed:",o)}},[]);N.useEffect(()=>{(async()=>{try{const r=await D.isWalletConnected();if(r.connected&&r.wallet){const s=await D.checkExistingDID(r.wallet.address);if(s){const d={...r.wallet,did:s};localStorage.setItem("persona_wallet",JSON.stringify(d)),localStorage.setItem("isAuthenticated","true"),localStorage.setItem("user_did",s),localStorage.setItem("wallet_address",r.wallet.address),console.log("[SUCCESS] User already authenticated, redirecting to dashboard"),w("/dashboard");return}else{C(d=>({...d,wallet:r.wallet})),h("identity",0);return}}await S.trackEvent("user_action","onboarding","start",e,{abTestVariant:u,timestamp:a,userAgent:navigator.userAgent,referrer:document.referrer}),_.trackConversion(e,"onboarding_optimization","onboarding_start",1);const o=await E.getItem("onboarding_progress");if(o){const s=JSON.parse(o);Date.now()-s.timestamp<864e5&&(n(d=>({...d,step:s.step,completion:s.completion})),C(d=>({...d,wallet:s.wallet,didKeyPair:s.didKeyPair,recoveryPhrase:s.recoveryPhrase||[],txHash:s.txHash})),await S.trackEvent("user_action","onboarding","resume",e,{savedStep:s.step,timeElapsed:Date.now()-s.timestamp,abTestVariant:u}),console.log("📂 Restored onboarding progress from",s.step))}}catch(r){console.warn("[WARNING] Failed to load saved progress:",r),S.trackEvent("error","onboarding","load_failed",e,{error:r instanceof Error?r.message:"Unknown error",abTestVariant:u})}})()},[e,u,a,w]),N.useEffect(()=>{(c.wallet||c.didKeyPair)&&f(c,i)},[c,i,f]);const h=async(y,r=0)=>{const o=["connect","identity","complete"],s=o.indexOf(y);let d=0;for(let v=0;v<s;v++)d+=T[o[v]];d+=T[y]*r/100;const m=i.step;if(m!==y){const v=Date.now()-p;m&&(await S.trackEvent("user_action","onboarding_step","complete",e,{step:m,timeSpent:v,totalProgress:i.completion,abTestVariant:u}),_.trackConversion(e,"onboarding_optimization",`step_${m}_complete`,1)),await S.trackEvent("user_action","onboarding_step","start",e,{step:y,fromStep:m,abTestVariant:u}),l(Date.now())}n(v=>({...v,step:y,completion:Math.min(100,d),subProgress:r}))},O=async()=>{n(r=>({...r,isLoading:!0,error:null})),h("connect",10);const y=async()=>{if(h("connect",30),!window.keplr)throw new Error("Keplr wallet not found. Please install Keplr extension.");h("connect",50);const r=await D.connectKeplr();if(!r)throw new Error("Failed to connect to Keplr wallet");h("connect",70);const o=await D.checkExistingDID(r.address);if(h("connect",90),C(s=>({...s,wallet:r})),o){n(d=>({...d,error:"Welcome back! This wallet is already registered with Persona."}));const s={...r,did:o};return localStorage.setItem("persona_wallet",JSON.stringify(s)),localStorage.setItem("isAuthenticated","true"),localStorage.setItem("user_did",o),localStorage.setItem("wallet_address",r.address),h("complete",100),await E.removeItem("onboarding_progress"),setTimeout(()=>w("/dashboard"),3e3),{existingUser:!0,wallet:s}}return h("connect",100),{existingUser:!1,wallet:r}};try{const r=await P.retryOAuthOperation(y,"keplr-connect",{maxAttempts:2,onRetry:(o,s)=>{n(d=>({...d,error:`Connection attempt ${o}... ${s.message}`}))}});if(r.success&&r.result){const{existingUser:o}=r.result;o?n(s=>({...s,isLoading:!1})):setTimeout(()=>{h("identity",0),n(s=>({...s,isLoading:!1}))},500)}else throw r.error||new Error("Connection failed")}catch(r){g.logError("[ERROR] Connection failed:",r);const o=g.createError("ONBOARDING_CONNECTION_FAILED","Failed to connect wallet during onboarding",A.AUTHENTICATION,I.HIGH,g.createContext({component:"streamlined-onboarding",action:"connect"}),{originalError:r instanceof Error?r:void 0,userMessage:r instanceof Error?r.message:"Connection failed. Please try again.",retryable:!0,recoveryActions:["retry_connection","install_keplr","check_browser"]});g.reportError(o),n(s=>({...s,isLoading:!1,error:o.userMessage}))}},k=async()=>{if(!c.wallet){n(r=>({...r,error:"Wallet not connected"}));return}n(r=>({...r,isLoading:!0,error:null})),h("identity",10);const y=async()=>{const r={didGeneration:G.generateDID(),mnemonicGeneration:H.generateMnemonic()};h("identity",25);const[o,s]=await Promise.all([r.didGeneration,r.mnemonicGeneration]),d=s.split(" ");h("identity",50);const m={did:o.did,privateKey:o.privateKey,publicKey:o.publicKey,document:o.document};h("identity",70);const v={...c.wallet,did:m.did},$=await D.createDIDOnChain(v);h("identity",90);const W={id:m.did,method:"key",identifier:m.did.split(":").pop(),controller:c.wallet.address,created:new Date().toISOString(),updated:new Date().toISOString(),publicKeys:[{id:`${m.did}#key-1`,type:"Ed25519VerificationKey2020",controller:m.did,publicKeyBase58:btoa(String.fromCharCode(...Array.from(m.publicKey)))}],authentication:[`${m.did}#key-1`],keyAgreement:[`${m.did}#key-1`],capabilityInvocation:[`${m.did}#key-1`],privateKey:m.privateKey,publicKey:m.publicKey,document:m.document,keyType:"Ed25519",purposes:["authentication","keyAgreement","capabilityInvocation"]};return await Promise.all([E.storeDID(W),E.setCurrentDID(m.did),E.setItem("recovery_phrase_backed_up","true")]),h("identity",100),{didKeyPair:m,recoveryPhrase:d,txHash:$}};try{const r=await P.retryCredentialCreation(y,"did-creation",{onRetry:(o,s)=>{n(d=>({...d,error:`Creating identity (attempt ${o})... ${s.message}`}))}});if(r.success&&r.result){const{didKeyPair:o,recoveryPhrase:s,txHash:d}=r.result;C(m=>({...m,didKeyPair:o,recoveryPhrase:s,txHash:d})),setTimeout(()=>{h("complete",50),K(o,d)},1e3)}else throw r.error||new Error("Identity creation failed")}catch(r){g.logError("[ERROR] Identity creation failed:",r);const o=g.createError("ONBOARDING_IDENTITY_FAILED","Failed to create identity during onboarding",A.BLOCKCHAIN,I.HIGH,g.createContext({component:"streamlined-onboarding",action:"create-identity"}),{originalError:r instanceof Error?r:void 0,userMessage:"Failed to create your digital identity. Please try again.",retryable:!0,recoveryActions:["retry_creation","check_network","contact_support"]});g.reportError(o),n(s=>({...s,isLoading:!1,error:o.userMessage}))}},K=async(y,r)=>{const o=y||c.didKeyPair,s=r||c.txHash;if(!c.wallet||!o){n(d=>({...d,error:"Missing required data for completion"}));return}h("complete",75);try{const d={...c.wallet,did:o.did};await Promise.all([E.setItem("wallet_address",c.wallet.address),E.setItem("onboarding_completed","true"),new Promise(m=>{localStorage.setItem("persona_wallet",JSON.stringify(d)),localStorage.setItem("isAuthenticated","true"),localStorage.setItem("user_did",o.did),localStorage.setItem("wallet_address",c.wallet.address),m(!0)})]),h("complete",100),await E.removeItem("onboarding_progress"),console.log("[SUCCESS] Onboarding completed successfully"),console.log("[NAVIGATION] Redirecting to dashboard..."),w("/dashboard")}catch(d){g.logError("[ERROR] Completion failed:",d),n(m=>({...m,error:"Failed to complete setup. Please try again."}))}},M=()=>t.jsxs("div",{className:"mb-8",children:[t.jsxs("div",{className:"flex items-center justify-between mb-2",children:[t.jsxs("span",{className:"text-sm font-medium text-slate-300",children:[i.step==="connect"&&"Connecting...",i.step==="identity"&&"Creating Identity...",i.step==="complete"&&"Completing Setup..."]}),t.jsxs("div",{className:"flex items-center space-x-2",children:[i.autoSaved&&t.jsx(x.span,{initial:{opacity:0,scale:.8},animate:{opacity:1,scale:1},exit:{opacity:0,scale:.8},className:"text-xs text-emerald-400 font-medium",children:"✓ Saved"}),t.jsxs("span",{className:"text-sm font-bold text-white",children:[Math.round(i.completion),"%"]})]})]}),t.jsx("div",{className:"w-full bg-slate-700/50 rounded-full h-3 overflow-hidden",children:t.jsx(x.div,{className:"h-full bg-gradient-to-r from-blue-500 via-cyan-500 to-blue-600 rounded-full shadow-lg shadow-blue-500/25",initial:{width:0},animate:{width:`${i.completion}%`},transition:{duration:.5,ease:"easeOut"}})}),i.isLoading&&t.jsx("div",{className:"mt-2 w-full bg-slate-600/30 rounded-full h-1",children:t.jsx(x.div,{className:"h-full bg-cyan-400 rounded-full",initial:{width:0},animate:{width:`${i.subProgress}%`},transition:{duration:.3}})})]}),L=()=>{switch(i.step){case"connect":return t.jsxs(x.div,{initial:{opacity:0,x:20},animate:{opacity:1,x:0},exit:{opacity:0,x:-20},className:"text-center",children:[t.jsx("div",{className:"w-16 h-16 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg shadow-blue-500/25",children:t.jsx("span",{className:"text-2xl",children:"[LINK]"})}),t.jsx("h1",{className:"text-3xl font-bold text-white mb-4",children:"Start Your Journey"}),t.jsx("p",{className:"text-lg text-slate-300 mb-8",children:"Connect your Keplr wallet to access your decentralized identity or create a new one"}),i.error&&t.jsxs(x.div,{initial:{opacity:0,y:10},animate:{opacity:1,y:0},className:`mb-6 p-4 rounded-lg backdrop-blur-sm ${i.error.includes("Welcome back")?"bg-emerald-500/10 border border-emerald-500/30":"bg-red-500/10 border border-red-500/30"}`,children:[t.jsx("p",{className:`text-sm ${i.error.includes("Welcome back")?"text-emerald-300":"text-red-300"}`,children:i.error}),i.error.includes("not found")&&t.jsx("a",{href:"https://www.keplr.app/",target:"_blank",rel:"noopener noreferrer",className:"text-cyan-400 hover:text-cyan-300 underline mt-2 block text-sm",children:"Install Keplr Wallet →"}),i.error.includes("Welcome back")&&t.jsx(j,{variant:"connect",size:"md",fullWidth:!0,onClick:()=>w("/login"),className:"mt-3",children:"Go to Sign In Page"})]}),t.jsx(j,{variant:"primary",size:"lg",fullWidth:!0,onClick:O,disabled:i.isLoading,isLoading:i.isLoading,icon:t.jsx("span",{className:"text-xl",children:"[LINK]"}),className:"mb-4",children:i.isLoading?"Connecting...":"Start Your Journey"}),t.jsxs("div",{className:"flex items-center my-6",children:[t.jsx("div",{className:"flex-1 h-px bg-slate-700"}),t.jsx("span",{className:"mx-4 text-sm text-slate-400",children:"Already have an identity?"}),t.jsx("div",{className:"flex-1 h-px bg-slate-700"})]}),t.jsx(j,{variant:"secondary",size:"lg",fullWidth:!0,onClick:()=>w("/login"),icon:t.jsx("svg",{className:"w-5 h-5",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:t.jsx("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"})}),children:"Sign In"})]},"connect");case"identity":return t.jsxs(x.div,{initial:{opacity:0,x:20},animate:{opacity:1,x:0},exit:{opacity:0,x:-20},className:"text-center",children:[t.jsx("div",{className:"w-16 h-16 bg-gradient-to-r from-purple-500 to-violet-500 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg shadow-purple-500/25",children:t.jsx("span",{className:"text-2xl",children:"🆔"})}),t.jsx("h2",{className:"text-3xl font-bold text-white mb-4",children:"Creating Your Identity"}),t.jsx("p",{className:"text-lg text-slate-300 mb-8",children:"Generating your unique DID and anchoring it securely on the blockchain"}),c.wallet&&t.jsx(x.div,{initial:{opacity:0,y:10},animate:{opacity:1,y:0},className:"mb-6 p-4 bg-emerald-500/10 border border-emerald-500/30 rounded-lg backdrop-blur-sm",children:t.jsxs("p",{className:"text-sm text-emerald-300",children:["✓ Connected: ",c.wallet.address.slice(0,10),"...",c.wallet.address.slice(-8)]})}),i.error&&t.jsx(x.div,{initial:{opacity:0,y:10},animate:{opacity:1,y:0},className:"mb-6 p-4 bg-red-500/10 border border-red-500/30 rounded-lg backdrop-blur-sm",children:t.jsx("p",{className:"text-red-300 text-sm",children:i.error})}),!i.isLoading&&!i.error&&t.jsx(j,{variant:"primary",size:"lg",fullWidth:!0,onClick:k,icon:t.jsx("span",{className:"text-xl",children:"🆔"}),className:"bg-gradient-to-r from-purple-500 to-violet-500 hover:from-purple-600 hover:to-violet-600 shadow-purple-500/25 hover:shadow-purple-500/40",children:"Create My Identity"}),i.isLoading&&t.jsxs("div",{className:"flex items-center justify-center space-x-2",children:[t.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-4 border-slate-700 border-t-purple-400"}),t.jsx("span",{className:"text-purple-400 font-medium",children:"Creating..."})]})]},"identity");case"complete":return t.jsxs(x.div,{initial:{opacity:0,x:20},animate:{opacity:1,x:0},exit:{opacity:0,x:-20},className:"text-center",children:[t.jsx(x.div,{initial:{scale:0},animate:{scale:1},transition:{delay:.2,type:"spring",stiffness:200},className:"w-20 h-20 bg-gradient-to-r from-emerald-500 to-green-500 rounded-full flex items-center justify-center mx-auto mb-6 shadow-lg shadow-emerald-500/25",children:t.jsx("span",{className:"text-3xl",children:"[SUCCESS]"})}),t.jsx("h2",{className:"text-3xl font-bold text-white mb-4",children:"Welcome to Persona!"}),t.jsx("p",{className:"text-lg text-slate-300 mb-8",children:"Your decentralized identity is ready. You can now create and manage verifiable credentials."}),c.didKeyPair&&t.jsxs(x.div,{initial:{opacity:0,y:10},animate:{opacity:1,y:0},transition:{delay:.3},className:"mb-8 p-4 bg-emerald-500/10 border border-emerald-500/30 rounded-lg backdrop-blur-sm",children:[t.jsx("p",{className:"text-xs text-slate-400 mb-1",children:"Your DID:"}),t.jsx("p",{className:"text-sm text-emerald-300 font-mono break-all",children:c.didKeyPair.did}),c.txHash&&t.jsxs("p",{className:"text-xs text-emerald-400 mt-2",children:["✓ Anchored on blockchain: ",c.txHash.slice(0,10),"..."]})]}),t.jsxs(x.div,{initial:{opacity:0},animate:{opacity:1},transition:{delay:.5},className:"flex flex-col items-center space-y-4",children:[t.jsx(j,{variant:"primary",size:"lg",fullWidth:!0,onClick:()=>{console.log("[MANUAL] User clicked Go to Dashboard"),w("/dashboard")},icon:t.jsx("span",{className:"text-xl",children:"🚀"}),className:"bg-gradient-to-r from-emerald-500 to-green-500 hover:from-emerald-600 hover:to-green-600",children:"Go to Dashboard"}),t.jsx("div",{className:"text-xs text-slate-500",children:"Auto-redirecting in a few seconds..."})]})]},"complete");default:return null}};return t.jsx("div",{className:"min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-800 flex items-center justify-center p-2 sm:p-4",children:t.jsxs(x.div,{className:"max-w-lg w-full bg-slate-900/80 backdrop-blur-xl rounded-2xl sm:rounded-3xl shadow-2xl border border-slate-700/50 p-4 sm:p-6 md:p-8",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.6},children:[M(),t.jsx(B,{mode:"wait",children:L()}),c.recoveryPhrase.length>0&&i.step==="complete"&&t.jsxs(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.4},className:"mt-6 p-4 bg-yellow-500/10 border border-yellow-500/30 rounded-lg backdrop-blur-sm",children:[t.jsx("p",{className:"text-sm font-medium text-yellow-300 mb-2",children:"[LOCK] Your Recovery Phrase (Auto-saved)"}),t.jsx("div",{className:"grid grid-cols-3 gap-2 text-xs",children:c.recoveryPhrase.slice(0,6).map((y,r)=>t.jsxs("span",{className:"font-mono text-yellow-400",children:[r+1,". ",y]},r))}),t.jsx("p",{className:"text-xs text-yellow-400 mt-2",children:"Full phrase saved securely. Access in Settings → Security."})]})]})})};export{J as StreamlinedOnboardingFlow};
