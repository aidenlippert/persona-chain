syntax = "proto3";

package persona_chain.vc.v1;

import "gogoproto/gogo.proto";

option go_package = "github.com/persona-chain/persona-chain/x/vc/types";

message VcPacketData {
  oneof packet {
    NoData noData = 1;
    VcIssuePacketData vcIssuePacketData = 2;
    VcRevokePacketData vcRevokePacketData = 3;
    VcVerifyPacketData vcVerifyPacketData = 4;
  }
}

message NoData {}

// VcIssuePacketData defines a struct for the VC issuance packet payload
message VcIssuePacketData {
  string vc_id = 1;
  string issuer_did = 2;
  string subject_did = 3;
  string credential_schema = 4;
  string credential_data = 5;
  string proof = 6;
  int64 issued_at = 7;
  int64 expires_at = 8;
}

// VcIssuePacketAck defines a struct for the VC issuance acknowledgment
message VcIssuePacketAck {
  bool success = 1;
  string error = 2;
  string vc_id = 3;
}

// VcRevokePacketData defines a struct for the VC revocation packet payload
message VcRevokePacketData {
  string vc_id = 1;
  string issuer_did = 2;
  int64 revoked_at = 3;
}

// VcRevokePacketAck defines a struct for the VC revocation acknowledgment
message VcRevokePacketAck {
  bool success = 1;
  string error = 2;
}

// VcVerifyPacketData defines a struct for VC verification requests
message VcVerifyPacketData {
  string vc_id = 1;
  string verification_method = 2;
}

// VcVerifyPacketAck defines a struct for VC verification response
message VcVerifyPacketAck {
  bool verified = 1;
  string error = 2;
  string vc_status = 3; // "valid", "revoked", "expired", "not_found"
}