# PersonaChain Docker Image for Google Cloud
# Multi-stage build for optimized production image

# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    make \
    gcc \
    musl-dev \
    linux-headers

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Download dependencies
RUN go mod download

# Build the PersonaChain daemon
RUN cd cmd/persona-chaind && \
    CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o ../../personachaind .

# Production stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    jq \
    curl \
    bash

# Create user for security
RUN addgroup -g 1000 persona && \
    adduser -D -s /bin/bash -u 1000 -G persona persona

# Set working directory
WORKDIR /home/persona

# Copy binary from builder
COPY --from=builder /app/personachaind /usr/local/bin/

# Create necessary directories
RUN mkdir -p /home/persona/.personachain/config && \
    mkdir -p /home/persona/.personachain/data && \
    chown -R persona:persona /home/persona

# Copy startup script
COPY deployment/docker/start.sh /start.sh
RUN chmod +x /start.sh

# Switch to persona user
USER persona

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:26657/status || exit 1

# Expose ports
EXPOSE 26657 8100 26656 1317 9090 9091

# Set entrypoint
ENTRYPOINT ["/start.sh"]
CMD ["start"]